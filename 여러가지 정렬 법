★★★★★★가장 중요한 개념

★기본적으로 양수일경우 Arrays.sort()에서 정렬 알고리즘에 의해 위치를 바꾸고, 0 이나 음의 정수인 경우는 두 객체의 위치는 바뀌지 않는다. 


1. 그냥 코드에서 정렬할때

ArrayList<Node> AL = new ArrayList<Node>();

Collections.sort(AL, new Comparator<Node>() {

			@Override
			public int compare(Node o1, Node o2) {
				return Integer.compare(o1.num, o2.num);
			}
		});
    
***오름차순 정렬할때는 앞에꺼, 뒤에꺼 순으로 작성하기.****

2. 클래스에서 할때

public static class Node implements Comparable<Node>{

		@Override
		public int compareTo(Node other) {
			return Integer.compare(this.num, other.num);
		}
	}

}


3. 두가지의 정보를 정렬해야할때 
-> 먼저 실패율을 내림차순 정렬하고 -> 실패율이 같은경우 번호대로 오름차순 정렬할때

Collections.sort(list, new Comparator<Node>() {

			@Override
			public int compare(Node o1, Node o2) {
				
				if(o1.fail == o2.fail)
					return Integer.compare(o1.num, o2.num);
				
				return Double.compare(o2.fail, o1.fail);
			}
			
		});
    
    
